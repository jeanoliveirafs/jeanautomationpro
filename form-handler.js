// Handler para formul√°rio de an√°lise gratuita - Redireciona para WhatsApp
document.addEventListener('DOMContentLoaded', function() {
    console.log('üì± Form handler carregado');
    
    // Configura√ß√µes do WhatsApp
    const WHATSAPP_NUMBER = '5511999999999'; // Substitua pelo n√∫mero real do Jean
    
    // Fun√ß√£o para formatar mensagem do WhatsApp
    function formatWhatsAppMessage(formData) {
        const message = `üî• *SOLICITA√á√ÉO DE AN√ÅLISE GRATUITA*

üë§ *Dados Pessoais:*
‚Ä¢ Nome: ${formData.get('name') || 'N√£o informado'}
‚Ä¢ Email: ${formData.get('email') || 'N√£o informado'}
‚Ä¢ Telefone: ${formData.get('phone') || 'N√£o informado'}

üè¢ *Empresa:*
‚Ä¢ Nome da empresa: ${formData.get('companyName') || 'N√£o informado'}
‚Ä¢ Website: ${formData.get('companyWebsite') || 'N√£o informado'}

üíº *Servi√ßos de Interesse:*
${getSelectedServices(formData)}

üìä *Informa√ß√µes Adicionais:*
‚Ä¢ Desafio principal: ${formData.get('mainChallenge') || 'N√£o informado'}
‚Ä¢ Or√ßamento estimado: ${formData.get('budgetRange') || 'N√£o informado'}

---
üìÖ Solicitado em: ${new Date().toLocaleString('pt-BR')}
üåê Origem: Landing Page - jeanautomationpro.com`;

        return encodeURIComponent(message);
    }
    
    // Fun√ß√£o para obter servi√ßos selecionados
    function getSelectedServices(formData) {
        const services = {
            'ai-chatbot': 'ü§ñ Atendimento com IA',
            'landing-page': 'üöÄ Landing Pages',
            'saas': 'üíª Produtos SaaS',
            'consultoria': 'üìä Consultoria Digital'
        };
        
        let selectedServices = [];
        for (let [key, label] of Object.entries(services)) {
            if (formData.get(key)) {
                selectedServices.push(`‚Ä¢ ${label}`);
            }
        }
        
        return selectedServices.length > 0 ? selectedServices.join('\n') : '‚Ä¢ N√£o especificado';
    }
    
    // Fun√ß√£o para mostrar toast/notifica√ß√£o
    function showToast(message, type = 'success') {
        // Remove toast anterior se existir
        const existingToast = document.querySelector('.custom-toast');
        if (existingToast) {
            existingToast.remove();
        }
        
        const toast = document.createElement('div');
        toast.className = `custom-toast toast-${type}`;
        toast.innerHTML = `
            <div class="toast-content">
                <span class="toast-icon">${type === 'success' ? '‚úÖ' : '‚ùå'}</span>
                <span class="toast-message">${message}</span>
            </div>
        `;
        
        // Estilos do toast
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? '#10B981' : '#EF4444'};
            color: white;
            padding: 16px 24px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            z-index: 10000;
            display: flex;
            align-items: center;
            gap: 8px;
            font-family: system-ui, -apple-system, sans-serif;
            font-size: 14px;
            max-width: 400px;
            animation: slideIn 0.3s ease-out;
        `;
        
        document.body.appendChild(toast);
        
        // Remove ap√≥s 5 segundos
        setTimeout(() => {
            if (toast.parentNode) {
                toast.style.animation = 'slideOut 0.3s ease-in';
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.remove();
                    }
                }, 300);
            }
        }, 5000);
    }
    
    // Adicionar estilos CSS para anima√ß√µes
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }
        
        .custom-toast .toast-content {
            display: flex;
            align-items: center;
            gap: 8px;
        }
    `;
    document.head.appendChild(style);
    
    // Interceptar todos os formul√°rios que tentam enviar para API
    document.addEventListener('submit', function(e) {
        const form = e.target;
        
        // Verificar se √© um formul√°rio que deveria ir para API
        if (form.tagName === 'FORM') {
            console.log('üìù Formul√°rio submetido, redirecionando para WhatsApp...');
            
            e.preventDefault();
            
            try {
                const formData = new FormData(form);
                
                // Valida√ß√£o b√°sica
                const name = formData.get('name');
                const email = formData.get('email');
                const phone = formData.get('phone');
                
                if (!name || !email || !phone) {
                    showToast('Por favor, preencha pelo menos nome, email e telefone', 'error');
                    return;
                }
                
                // Validar email
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(email)) {
                    showToast('Por favor, informe um email v√°lido', 'error');
                    return;
                }
                
                // Formatar mensagem e abrir WhatsApp
                const message = formatWhatsAppMessage(formData);
                const whatsappUrl = `https://wa.me/${WHATSAPP_NUMBER}?text=${message}`;
                
                console.log('üì± Abrindo WhatsApp:', whatsappUrl);
                
                // Mostrar confirma√ß√£o
                showToast('Redirecionando para WhatsApp... üì±');
                
                // Abrir WhatsApp ap√≥s um pequeno delay
                setTimeout(() => {
                    window.open(whatsappUrl, '_blank');
                }, 1000);
                
                // Limpar formul√°rio
                form.reset();
                
            } catch (error) {
                console.error('‚ùå Erro ao processar formul√°rio:', error);
                showToast('Erro ao processar formul√°rio. Tente novamente.', 'error');
            }
        }
    });
    
    // Tamb√©m interceptar cliques em bot√µes de CTA que abriam modais
    document.addEventListener('click', function(e) {
        const button = e.target.closest('button');
        if (button) {
            const buttonText = button.textContent.toLowerCase();
            
            // Detectar bot√µes de a√ß√£o principais
            if (buttonText.includes('an√°lise') || 
                buttonText.includes('solicitar') || 
                buttonText.includes('quero') ||
                buttonText.includes('come√ßar')) {
                
                console.log('üîò Bot√£o CTA clicado, abrindo WhatsApp direto');
                e.preventDefault();
                
                const defaultMessage = encodeURIComponent(`üî• Ol√°! Vim da landing page e gostaria de solicitar uma an√°lise gratuita do meu neg√≥cio.

Estou interessado em saber mais sobre as solu√ß√µes de IA e automa√ß√£o da Jean Automation Pro.

Aguardo o contato! üòä`);
                
                const whatsappUrl = `https://wa.me/${WHATSAPP_NUMBER}?text=${defaultMessage}`;
                
                showToast('Abrindo WhatsApp para contato direto! üì±');
                
                setTimeout(() => {
                    window.open(whatsappUrl, '_blank');
                }, 1000);
            }
        }
    });
    
    console.log('‚úÖ Form handler configurado com sucesso!');
}); 